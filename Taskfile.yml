version: "3"

includes:
  std:
    taskfile: ~/.local/task/better-sre/config/Taskfile.yml
    dir: ~/.local/task/better-sre/config # global path
    optional: true #

  mojo:
    taskfile: packages/mojo101/
    dir: packages/mojo101/
    optional: true #

  docs:
    taskfile: packages/mojo-manual/
    dir: packages/mojo-manual/
    optional: true #

  std:
    taskfile: packages/mojo-std/
    dir: packages/mojo-std/
    optional: true #

  try:
    taskfile: packages/try/
    dir: packages/try/
    optional: true #

################################################################################################

#
# global vars: https://taskfile.dev/#/usage?id=variables
#
vars:
  VAR1: "some-var"

# global env:
env:
  ENV1: testing

# env file:
dotenv:
  - .env

################################################################################################

tasks:
  setup:
    cmds:
      - curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash
      - pyenv install 3.10.6
      - pyenv virtualenv 3.10.6 py310
      - pyenv local py310
      - pip install --upgrade pip
      - pip install -U pipx
      - pipx ensurepath
      - pipx --version

  install:tools:
    cmds:
      - pipx install cookiecutter
      - cookiecutter --version
      - pipx install poetry
      - poetry --version
      - poetry config virtualenvs.in-project true
      - poetry config --list

  install:m1:
    cmds:
      - modular --help
      - modular upgrade mojo
      - mojo --version

  init:
    cmds:
      - task init:env

  init:env:
    cmds:
      - cp .env.local .env

  ##################################################################################################

  new:
    cmds:
      - poetry new ${NEW_PROJECT_NAME} --src
    dir: packages/

  new2:
    dir: packages
    cmds:
      - cookiecutter gh:jacebrowning/template-python -f

  ##################################################################################################

  gp:
    cmds:
      - task: quick
      - task: push

  quick:
    cmds:
      - task: commit
      - task: commit
  #      - task: pull
  #      - task: push

  commit:
    cmds:
      - git add .
      - git commit -m "update"
    ignore_error: true

  pull:
    cmds:
      - git config pull.rebase false
      - git pull origin main

  push:
    cmds:
      - git push origin main --tags
      - repo_url=`git remote -v | grep push | awk -F ":" '{print $2}' | awk -F ".git" '{print "https://github.com/"$1}'`; open $repo_url
